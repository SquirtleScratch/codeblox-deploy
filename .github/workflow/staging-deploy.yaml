name: deploy-staging

on:
  push:
    branches:
      - main

jobs:
  unit-testing-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Create .env.test (Node Environment)
        run: |
          echo "POSTGRES_HOST_ALIAS=${{ secrets.POSTGRES_HOST_ALIAS }}" >> .configs/.env.test
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .configs/.env.test
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .configs/.env.test
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .configs/.env.test
          echo "ORGANIZATION=${{ secrets.ORGANIZATION }}" >> .configs/.env.test

      - name: Create .env file (Docker Compose)
        run: |
          echo "POSTGRES_HOST_ALIAS=${{ secrets.POSTGRES_HOST_ALIAS }}" >> .docker/.env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .docker/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .docker/.env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .docker/.env
          echo "ORGANIZATION=${{ secrets.ORGANIZATION }}" >> .docker/.env

      - name: Run tests with Docker Compose
        run: NODE_ENV=test docker compose -f .docker/docker-compose-test.yml -f .docker/docker-compose-postgres.test.yml up --abort-on-container-exit

  deploy:
    needs: unit-testing-staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      #  https://github.com/actions/setup-python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Upgrade pip
        run: python3 -m pip install --upgrade pip

      - name: Install AWS CLI
        run: python3 -m pip install --user awscli

      - name: Deploy to AWS
        run: sh ./.configs/scripts/deploy-staging.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUB_SHA: ${{ github.sha }}